<?php/** This file use to cretae fields of gam event manager at admin side.*/if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directlyclass GAM_EVENT_MANAGER_Writepanels {	/**	 * __construct function.	 *	 * @access public	 * @return void	 */	public function __construct() {		add_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );		add_action( 'save_post', array( $this, 'save_post' ), 1, 2 );		add_action( 'event_manager_save_event_listing', array( $this, 'save_event_listing_data' ), 20, 2 );	}	/**	 * event_listing_fields function.	 *	 * @access public	 * @return void	 */	public function event_listing_fields() {	    		global $post;		$current_user = wp_get_current_user();		$fields = array(		        '_view_count' => array(					'label'       => __( 'Total View Count', 'gam-event-manager' ),					'type'        => 'text',					'required'    => true,					'placeholder' => 'View Count',					'priority'    => 1				),								'_registration' => array(    				'label'       => __( 'Registration Email or URL', 'gam-event-manager' ),    				'placeholder' => __( 'URL or email which attendees use to register', 'gam-event-manager' ),    				'description' => __( 'This field is required for the "registration" area to appear beneath the listing.', 'gam-event-manager' ),    				'value'       => metadata_exists( 'post', $post->ID, '_registration' ) ? get_post_meta( $post->ID, '_registration', true ) : $current_user->user_email,    				'priority'    => 2			    ),								'_event_title' => array(					'label'       => __( 'Event Title', 'gam-event-manager' ),					'type'        => 'text',					'required'    => true,					'placeholder' => 'event title',					'priority'    => 3				),				'_event_type' => array(					'label'       => __( 'Event Type', 'gam-event-manager' ),					'type'        => 'term-select',					'required'    => true,					'placeholder' => '',					'priority'    => 4,					'default'     => 'meeting-or-networking-event',					'taxonomy'    => 'event_listing_type'				),				'_event_category' => array(					'label'       => __( 'Event Category', 'gam-event-manager' ),					'type'        => 'term-multiselect',					'required'    => true,					'placeholder' => '',					'priority'    => 5,					'default'     => '',					'taxonomy'    => 'event_listing_category'				),				'_event_online' => array(							        'label'=> __('Online Event','gam-event-manager' ),							      	'name'  =>'event_online',							        'type'  => 'radio',									'default'  => 'no',									'options'  => array(												'yes' => __( 'Yes', 'gam-event-manager' ),												'no' => __( 'No', 'gam-event-manager' ),											),									'priority'    => 6,									'required'=>true		 		 ),				 		 		 		 '_event_venue_name' => array(					'label'       => __( 'Venue Name', 'gam-event-manager' ),					'type'        => 'text',					'required'    => true,										'placeholder' => __( 'Please enter the venue name', 'gam-event-manager' ),					'priority'    => 7				),					'_event_address' => array(					'label'       => __( 'Address', 'gam-event-manager' ),					'type'        => 'text',					'required'    => true,										'placeholder' => __( 'Please enter street name and number', 'gam-event-manager' ),					'priority'    => 8				),								'_event_pincode' => array(					'label'       => __( 'Pincode', 'gam-event-manager' ),					'type'        => 'text',					'required'    => true,					'placeholder' => __( 'Please enter pincode (Area code)', 'gam-event-manager' ),					'priority'    => 9				),				'_event_location' => array(					'label'       => __( 'Location', 'gam-event-manager' ),					'description' => __( 'Leave this blank if the location is not important', 'gam-event-manager' ),					'type'        => 'text',					'required'    => true,					'placeholder' => __( 'e.g. "Berlin","Munich"', 'gam-event-manager' ),					'priority'    => 10				),				'_event_banner' => array(					'label'       => __( 'Event Banner', 'gam-event-manager' ),					'type'        => 'file',					'required'    => false,					'placeholder' => '',					'priority'    => 11,					'ajax'        => true,					'multiple'    => false,					'allowed_mime_types' => array(						'jpg'  => 'image/jpeg',						'jpeg' => 'image/jpeg',						'gif'  => 'image/gif',						'png'  => 'image/png'					)				),				'_event_description' => array(					'label'       => __( 'Description', 'gam-event-manager' ),					'type'        => 'text',					'required'    => true,					'placeholder' => '',					'priority'    => 12				),												'_event_start_date' => array(  								'label'=> __('Start Date', 'gam-event-manager' ),								'placeholder'  => __( 'Please enter event start date', 'gam-event-manager' ),																'type'  => 'text',								'priority'    => 13,								'required'=>true	  							  ),							  				'_event_start_time' => array(  								'label'=> __('Start Time', 'gam-event-manager' ),								'placeholder'  => __( 'Please enter event start time', 'gam-event-manager' ),																'type'  => 'text',								'priority'    => 14,								'required'=>true	  							  ),				'_event_end_date' => array(							        'label'=> __('End Date', 'gam-event-manager' ),							        'placeholder'  => __( 'Please enter event end date', 'gam-event-manager' ),							        							        'type'  => 'text',									'priority'    => 15,							       'required'=>true							  ),							  				'_event_end_time' => array(							        'label'=> __('End Time', 'gam-event-manager' ),							        'placeholder'  => __( 'Please enter event end time', 'gam-event-manager' ),							        							        'type'  => 'text',									'priority'    => 16,							        'required'=>true							  ),				'_event_ticket_options' => array(							        'label'=> __('Ticket Options', 'gam-event-manager' ),							      								        'type'  => 'radio',									'default'  => 'free',									'options'  => array(											'paid' => __( 'Paid', 'gam-event-manager' ),  											'free' => __( 'Free', 'gam-event-manager' ) 								 		),								   'priority'    => 17,							       'required'=>true		 		 ),		                '_event_ticket_price' => array(							        'label'=> __('Price', 'gam-event-manager' ),							        'placeholder'  => __( 'Please enter ticket price', 'gam-event-manager' ),							        							        'type'  => 'text',									'priority'    => 18,							        'required'=>true							  ),				'_event_repeat' => array(								'label'=>  __('Repeat Event', 'gam-event-manager' ),							      							        'type'  => 'radio',									'default'  => 'no',									'options'  => array(											'every-week' =>  __( 'Every Week', 'gam-event-manager' ), 											'every-2week' => __( 'Every 2nd Week', 'gam-event-manager' ),											'every-month' => __( 'Every Month', 'gam-event-manager' ),											'no' => __( 'No', 'gam-event-manager' )								 		),									'priority'    => 19,							        'required'=>true				),				'_event_link_to_eventpage' => array(									'label'       => __( 'Link To Event Page', 'gam-event-manager' ),																		'type'        => 'text',									'required'    => false,														'placeholder' => __( 'e.g http://ww.example.com', 'gam-event-manager' ),									'priority'    => 20				),				'_event_registration_deadline' => array(									'label'       => __( 'Registration Deadline', 'gam-event-manager' ),																								'type'        => 'text',									'required'    => false,														'placeholder' => __( 'Please enter registration deadline', 'gam-event-manager' ),									'priority'    => 21				),				'_organizer_name' => array(								'label'       => __( 'Organization name', 'gam-event-manager' ),								'type'        => 'text',								'required'    => true,								'placeholder' => __( 'Enter the name of the organization', 'gam-event-manager' ),								'priority'    => 22				),				'_organizer_logo' => array(								'label'       => __( 'Logo', 'gam-event-manager' ),								'type'        => 'file',								'required'    => false,								'placeholder' => '',								'priority'    => 23,								'ajax'        => true,								'multiple'    => false,								'allowed_mime_types' => array(									'jpg'  => 'image/jpeg',									'jpeg' => 'image/jpeg',									'gif'  => 'image/gif',									'png'  => 'image/png'								)				),				'_organizer_description' => array(					'label'       => __( 'Organizer Description', 'gam-event-manager' ),					'type'        => 'text',					'required'    => true,					'placeholder' => '',					'priority'    => 24				),						'_organizer_contact_person_name' => array(								'label'       => __( 'Contact Person Name', 'gam-event-manager' ),								'type'        => 'text',								'required'    => true,								'placeholder' => __( 'Enter contact person name in your organization', 'gam-event-manager' ),								'priority'    => 25				),				'_organizer_email' => array(								'label'       => __( 'Organization Email', 'gam-event-manager' ),								'type'        => 'text',								'required'    => true,								'placeholder' => __( 'Enter your email address', 'gam-event-manager' ),								'priority'    => 26				),				'_organizer_website' => array(								'label'       => __( 'Website', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Website URL e.g http://www.yourorganization.com', 'gam-event-manager' ),								'priority'    => 27				),				'_organizer_tagline' => array(								'label'       => __( 'Tagline', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Your organization tagline', 'gam-event-manager' ),								'maxlength'   => 64,								'priority'    => 28				),				'_organizer_video' => array(								'label'       => __( 'Video', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'A link to a video about your organization', 'gam-event-manager' ),								'priority'    => 29				),				'_organizer_youtube' => array(								'label'       => __( 'Youtube', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Youtube Channel URL e.g http://www.youtube.com/channel/yourcompany', 'gam-event-manager' ),								'priority'    => 30				),				'_organizer_google_plus' => array(								'label'       => __( 'Google+', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Google+ URL e.g http://plus.google.com/yourcompany', 'gam-event-manager' ),								'priority'    => 31				),				'_organizer_facebook' => array(								'label'       => __( 'Facebook', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Facebook URL e.g http://www.facebook.com/yourcompany', 'gam-event-manager' ),								'priority'    => 32				),				'_organizer_linkedin' => array(								'label'       => __( 'Linkedin', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Linkedin URL e.g http://www.linkedin.com/company/yourcompany', 'gam-event-manager' ),								'priority'    => 33				),				'_organizer_twitter' => array(								'label'       => __( 'Twitter username', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( '@yourorganizer', 'gam-event-manager' ),								'priority'    => 34				),				'_organizer_xing' => array(								'label'       => __( 'Xing', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Xing URL e.g http://www.xing.com/companies/yourcompany', 'gam-event-manager' ),								'priority'    => 35				),				'_organizer_pinterest' => array(								'label'       => __( 'Pinterest', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Pinterest URL e.g http://www.pinterest.com/yourcompany', 'gam-event-manager' ),								'priority'    => 36				),				'_organizer_instagram' => array(								'label'       => __( 'Instagram', 'gam-event-manager' ),								'type'        => 'text',								'required'    => false,								'placeholder' => __( 'Instagram URL e.g http://www.instagram.com/yourcompany', 'gam-event-manager' ),								'priority'    => 37				),						 				'_cancelled' => array(					'label'       => __( 'Event Cancelled', 'gam-event-manager' ),					'type'        => 'checkbox',					'priority'    => 38,					'description' => __( 'Cancelled listings will no longer accept registration.', 'gam-event-manager' ),				 )		);		if ( $current_user->has_cap( 'manage_event_listings' ) ) {			$fields['_featured'] = array(				'label'       => __( 'Featured Listing', 'gam-event-manager' ),				'type'        => 'checkbox',				'description' => __( 'Featured listings will be sticky during searches, and can be styled differently.', 'gam-event-manager' ),				'priority'    => 39			);			$fields['_event_expiry_date'] = array(				'label'       => __( 'Listing Expiry Date', 'gam-event-manager' ),				'placeholder' => __( 'yyyy-mm-dd', 'gam-event-manager' ),				'priority'    => 40,				'value'       => metadata_exists( 'post', $post->ID, '_event_expiry_date' ) ? get_post_meta( $post->ID, '_event_expiry_date', true ) : get_event_expiry_date( $post->ID )			);		}		if ( $current_user->has_cap( 'edit_others_event_listings' ) ) {			$fields['_event_author'] = array(				'label'    => __( 'Posted by', 'gam-event-manager' ),				'type'     => 'author',				'priority' => 41			);		}		$fields = apply_filters( 'event_manager_event_listing_data_fields', $fields );		uasort( $fields, array( $this, 'sort_by_priority' ) );		return $fields;	}	/**	 * Sort array by priority value	 */	protected function sort_by_priority( $a, $b ) {	    if ( ! isset( $a['priority'] ) || ! isset( $b['priority'] ) || $a['priority'] === $b['priority'] ) {	        return 0;	    }	    return ( $a['priority'] < $b['priority'] ) ? -1 : 1;	}	/**	 * add_meta_boxes function.	 *	 * @access public	 * @return void	 */	public function add_meta_boxes() {		global $wp_post_types;		add_meta_box( 'event_listing_data', sprintf( __( '%s Data', 'gam-event-manager' ), $wp_post_types['event_listing']->labels->singular_name ), array( $this, 'event_listing_data' ), 'event_listing', 'normal', 'high' );	}	/**	 * input_file function.	 *	 * @param mixed $key	 * @param mixed $field	 */	public static function input_file( $key, $field ) {		global $thepostid;		if ( ! isset( $field['value'] ) ) {			$field['value'] = get_post_meta( $thepostid, $key, true );		}		if ( empty( $field['placeholder'] ) ) {			$field['placeholder'] = 'http://';		}		if ( ! empty( $field['name'] ) ) {			$name = $field['name'];		} else {			$name = $key;		}	?>			<p class="form-field">			<label for="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $field['label'] ) ; ?>: <?php if ( ! empty( $field['description'] ) ) : ?><span class="tips" data-tip="<?php echo esc_attr( $field['description'] ); ?>">[?]</span><?php endif; ?></label>			<?php			if ( ! empty( $field['multiple'] ) ) {				foreach ( (array) $field['value'] as $value ) {					?><span class="file_url"><input type="text" name="<?php echo esc_attr( $name ); ?>[]" placeholder="<?php echo esc_attr( $field['placeholder'] ); ?>" value="<?php echo esc_attr( $value ); ?>" /><button class="button button-small gam_event_manager_upload_file_button" data-uploader_button_text="<?php _e( 'Use file', 'gam-event-manager' ); ?>"><?php _e( 'Upload', 'gam-event-manager' ); ?></button></span><?php				}			} else {				?><span class="file_url"><input type="text" name="<?php echo esc_attr( $name ); ?>" id="<?php echo esc_attr( $key ); ?>" placeholder="<?php echo esc_attr( $field['placeholder'] ); ?>" value="<?php echo esc_attr( $field['value'] ); ?>" /><button class="button button-small gam_event_manager_upload_file_button" data-uploader_button_text="<?php _e( 'Use file', 'gam-event-manager' ); ?>"><?php _e( 'Upload', 'gam-event-manager' ); ?></button></span><?php			}			if ( ! empty( $field['multiple'] ) ) {				?><button class="button button-small gam_event_manager_add_another_file_button" data-field_name="<?php echo esc_attr( $key ); ?>" data-field_placeholder="<?php echo esc_attr( $field['placeholder'] ); ?>" data-uploader_button_text="<?php _e( 'Use file', 'gam-event-manager' ); ?>" data-uploader_button="<?php _e( 'Upload', 'gam-event-manager' ); ?>"><?php _e( 'Add file', 'gam-event-manager' ); ?></button><?php			}			?>		</p>		<?php	}	/**	 * input_text function.	 *	 * @param mixed $key	 * @param mixed $field	 */	public static function input_text( $key, $field ) {		global $thepostid;		if ( ! isset( $field['value'] ) ) {			$field['value'] = get_post_meta( $thepostid, $key, true );		}		if ( ! empty( $field['name'] ) ) {			$name = $field['name'];		} else {			$name = $key;		}		?>			<p class="form-field">			<label for="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $field['label'] ) ; ?>: <?php if ( ! empty( $field['description'] ) ) : ?><span class="tips" data-tip="<?php echo esc_attr( $field['description'] ); ?>">[?]</span><?php endif; ?></label>			<input type="text" name="<?php echo esc_attr( $name ); ?>" id="<?php echo esc_attr( $key ); ?>" placeholder="<?php echo esc_attr( $field['placeholder'] ); ?>" value="<?php echo esc_attr( $field['value'] ); ?>" />		</p>		<?php	}	/**	 * input_text function.	 *	 * @param mixed $key	 * @param mixed $field	 */	public static function input_textarea( $key, $field ) {		global $thepostid;		if ( ! isset( $field['value'] ) ) {			$field['value'] = get_post_meta( $thepostid, $key, true );		}		if ( ! empty( $field['name'] ) ) {			$name = $field['name'];		} else {			$name = $key;		}	?>		<p class="form-field">			<label for="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $field['label'] ) ; ?>: <?php if ( ! empty( $field['description'] ) ) : ?><span class="tips" data-tip="<?php echo esc_attr( $field['description'] ); ?>">[?]</span><?php endif; ?></label>			<textarea name="<?php echo esc_attr( $name ); ?>" id="<?php echo esc_attr( $key ); ?>" placeholder="<?php echo esc_attr( $field['placeholder'] ); ?>"><?php echo esc_html( $field['value'] ); ?></textarea>		</p>		<?php	}	/**	 * input_select function.	 *	 * @param mixed $key	 * @param mixed $field	 */	public static function input_select( $key, $field ) {	   		global $thepostid;		if ( ! isset( $field['value'] ) ) {			$field['value'] = get_post_meta( $thepostid, $key, true );		}		if ( ! empty( $field['name'] ) ) {			$name = $field['name'];		} else {			$name = $key;		}		?>		<p class="form-field">			<label for="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $field['label'] ) ; ?>: <?php if ( ! empty( $field['description'] ) ) : ?><span class="tips" data-tip="<?php echo esc_attr( $field['description'] ); ?>">[?]</span><?php endif; ?></label>			<select name="<?php echo esc_attr( $name ); ?>" id="<?php echo esc_attr( $key ); ?>">				<?php foreach ( $field['options'] as $key => $value ) : ?>				<option value="<?php echo esc_attr( $key ); ?>" <?php if ( isset( $field['value'] ) ) selected( $field['value'], $key ); ?>><?php echo esc_html( $value ); ?></option>				<?php endforeach; ?>			</select>		</p>		<?php	}	/**	 * input_select function.	 *	 * @param mixed $key	 * @param mixed $field	 */	public static function input_multiselect( $key, $field ) {		global $thepostid;		if ( ! isset( $field['value'] ) ) {			$field['value'] = get_post_meta( $thepostid, $key, true );		}		if ( ! empty( $field['name'] ) ) {			$name = $field['name'];		} else {			$name = $key;		}		?>		<p class="form-field">			<label for="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $field['label'] ) ; ?>: <?php if ( ! empty( $field['description'] ) ) : ?><span class="tips" data-tip="<?php echo esc_attr( $field['description'] ); ?>">[?]</span><?php endif; ?></label>			<select multiple="multiple" name="<?php echo esc_attr( $name ); ?>[]" id="<?php echo esc_attr( $key ); ?>">				<?php foreach ( $field['options'] as $key => $value ) : ?>				<option value="<?php echo esc_attr( $key ); ?>" <?php if ( ! empty( $field['value'] ) && is_array( $field['value'] ) ) selected( in_array( $key, $field['value'] ), true ); ?>><?php echo esc_html( $value ); ?></option>				<?php endforeach; ?>			</select>		</p>		<?php	}	/**	 * input_checkbox function.	 *	 * @param mixed $key	 * @param mixed $field	 */	public static function input_checkbox( $key, $field ) {		global $thepostid;		if ( empty( $field['value'] ) ) {			$field['value'] = get_post_meta( $thepostid, $key, true );		}		if ( ! empty( $field['name'] ) ) {			$name = $field['name'];		} else {			$name = $key;		}		?>		<p class="form-field form-field-checkbox">			<label for="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $field['label'] ) ; ?></label>			<input type="checkbox" class="checkbox" name="<?php echo esc_attr( $name ); ?>" id="<?php echo esc_attr( $key ); ?>" value="1" <?php checked( $field['value'], 1 ); ?> />			<?php if ( ! empty( $field['description'] ) ) : ?><span class="description"><?php echo $field['description']; ?></span><?php endif; ?>		</p>		<?php	}	/**	 * Box to choose who posted the event	 *	 * @param mixed $key	 * @param mixed $field	 */	 	public static function input_author( $key, $field ) {		global $thepostid, $post;		if ( ! $post || $thepostid !== $post->ID ) {			$the_post  = get_post( $thepostid );			$author_id = $the_post->post_author;		} else {			$author_id = $post->post_author;		}		$posted_by      = get_user_by( 'id', $author_id );		$field['value'] = ! isset( $field['value'] ) ? get_post_meta( $thepostid, $key, true ) : $field['value'];		$name           = ! empty( $field['name'] ) ? $field['name'] : $key;		?>		<p class="form-field form-field-author">			<label for="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $field['label'] ) ; ?>:</label>			<span class="current-author">				<?php					if ( $posted_by ) {						echo '<a href="' . admin_url( 'user-edit.php?user_id=' . absint( $author_id ) ) . '">#' . absint( $author_id ) . ' &ndash; ' . $posted_by->user_login . '</a>';					} else {						 _e( 'Guest User', 'gam-event-manager' );					}				?> <a href="#" class="change-author button button-small"><?php _e( 'Change', 'gam-event-manager' ); ?></a>			</span>			<span class="hidden change-author">				<input type="number" name="<?php echo esc_attr( $name ); ?>" id="<?php echo esc_attr( $key ); ?>" step="1" value="<?php echo esc_attr( $author_id ); ?>" style="width: 4em;" />				<span class="description"><?php _e( 'Enter the ID of the user, or leave blank if submitted by a guest.', 'gam-event-manager' ) ?></span>			</span>		</p>		<?php	}	/**	 * input_radio function.	 *	 * @param mixed $key	 * @param mixed $field	 */	public static function input_radio( $key, $field ) {		global $thepostid;		if ( empty( $field['value'] ) ) {			$field['value'] = get_post_meta( $thepostid, $key, true );		}		if ( ! empty( $field['name'] ) ) {			$name = $field['name'];		} else {			$name = $key;		}		?>		<p class="form-field form-field-checkbox">			<label><?php echo esc_html( $field['label'] ) ; ?></label>			<?php foreach ( $field['options'] as $option_key => $value ) : ?>				<label><input type="radio" class="radio" name="<?php echo esc_attr( isset( $field['name'] ) ? $field['name'] : $key ); ?>" value="<?php echo esc_attr( $option_key ); ?>" <?php checked( $field['value'], $option_key ); ?> /> <?php echo esc_html( $value ); ?></label>			<?php endforeach; ?>			<?php if ( ! empty( $field['description'] ) ) : ?><span class="description"><?php echo $field['description']; ?></span><?php endif; ?>		</p>		<?php	}	/**	 * event_listing_data function.	 *	 * @access public	 * @param mixed $post	 * @return void	 */	public function event_listing_data( $post ) {		global $post, $thepostid;		$thepostid = $post->ID;		echo '<div class="gam_event_manager_meta_data">';		wp_nonce_field( 'save_meta_data', 'event_manager_nonce' );		do_action( 'event_manager_event_listing_data_start', $thepostid );		foreach ( $this->event_listing_fields() as $key => $field ) {			$type = ! empty( $field['type'] ) ? $field['type'] : 'text';			if ( has_action( 'event_manager_input_' . $type ) ) {				do_action( 'event_manager_input_' . $type, $key, $field );			} elseif ( method_exists( $this, 'input_' . $type ) ) {				call_user_func( array( $this, 'input_' . $type ), $key, $field );			}		}		do_action( 'event_manager_event_listing_data_end', $thepostid );		echo '</div>';	}		/**	 * save_post function.	 *	 * @access public	 * @param mixed $post_id	 * @param mixed $post	 * @return void	 */	public function save_post( $post_id, $post ) {		if ( empty( $post_id ) || empty( $post ) || empty( $_POST ) ) return;		if ( defined('DOING_AUTOSAVE') && DOING_AUTOSAVE ) return;		if ( is_int( wp_is_post_revision( $post ) ) ) return;		if ( is_int( wp_is_post_autosave( $post ) ) ) return;		if ( empty($_POST['event_manager_nonce']) || ! wp_verify_nonce( $_POST['event_manager_nonce'], 'save_meta_data' ) ) return;		if ( ! current_user_can( 'edit_post', $post_id ) ) return;		if ( $post->post_type != 'event_listing' ) return;		do_action( 'event_manager_save_event_listing', $post_id, $post );	}	/**	 * save_event_listing_data function.	 *	 * @access public	 * @param mixed $post_id	 * @param mixed $post	 * @return void	 */	public function save_event_listing_data( $post_id, $post ) {		global $wpdb;		// These need to exist		add_post_meta( $post_id, '_cancelled', 0, true );		add_post_meta( $post_id, '_featured', 0, true );		// Save fields		foreach ( $this->event_listing_fields() as $key => $field ) {			//Event Expiry date			if ( '_event_expiry_date' === $key ) {            				if ( ! empty( $_POST[ $key ] ) ) {					update_post_meta( $post_id, $key, date( 'Y-m-d', strtotime( sanitize_text_field( $_POST[ $key ] ) ) ) );				} else {				    update_post_meta( $post_id, $key, '' );				}			}			// Locations			elseif ( '_event_location' === $key ) {				if ( update_post_meta( $post_id, $key, sanitize_text_field( $_POST[ $key ] ) ) ) {					// Location data will be updated by hooked in methods				} elseif ( apply_filters( 'event_manager_geolocation_enabled', true ) && ! GAM_EVENT_MANAGER_Geocode::has_location_data( $post_id ) ) {					GAM_EVENT_MANAGER_Geocode::generate_location_data( $post_id, sanitize_text_field( $_POST[ $key ] ) );				}			}			elseif ( '_event_author' === $key ) {				$wpdb->update( $wpdb->posts, array( 'post_author' => $_POST[ $key ] > 0 ? absint( $_POST[ $key ] ) : 0 ), array( 'ID' => $post_id ) );			}			// Everything else					else {				$type = ! empty( $field['type'] ) ? $field['type'] : '';				switch ( $type ) {					case 'textarea' :						update_post_meta( $post_id, $key,wp_kses_post( stripslashes( $_POST[ $key ] ) ) );					break;					case 'checkbox' :						if ( isset( $_POST[ $key ] ) ) {							update_post_meta( $post_id, $key, 1 );						} else {							update_post_meta( $post_id, $key, 0 );						}					break;					default :						if ( ! isset( $_POST[ $key ] ) ) {							continue;						} elseif ( is_array( $_POST[ $key ] ) ) {							update_post_meta( $post_id, $key, array_filter( array_map( 'sanitize_text_field', $_POST[ $key ] ) ) );						} else {							update_post_meta( $post_id, $key, sanitize_text_field( $_POST[ $key ] ) );						}					break;				}			}		}	}}new GAM_EVENT_MANAGER_Writepanels();